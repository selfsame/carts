{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pattern",
				"pattern_from_index"
			],
			[
				"for",
				"for\tfor"
			],
			[
				"tar",
				"target_dims"
			]
		]
	},
	"buffers":
	[
		{
			"file": "alienarchaeologist.p8",
			"settings":
			{
				"buffer_size": 58467,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 400.0,
		"last_filter": "pi",
		"selected_items":
		[
			[
				"pi",
				"PICO-8: Run Cartridge"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"men",
				"View: Toggle Menu"
			],
			[
				"syntax: cloj",
				"Set Syntax: ClojureScript"
			]
		],
		"width": 440.0
	},
	"console":
	{
		"height": 133.0,
		"history":
		[
			"text = '(load-string \"' + text.strip().replace('\"', r'\\\"') + '\")'",
			"view.scope_name(view.find(r\"^[^;]*?\\(\", 0).end()-1)",
			"view.scope_name(view.find(r\"^[^;]*?\\(\", 0).end()-1)\\",
			"view.scope_name(view.find(r\"^[^;]*?\\(\", 0).end()-1)",
			"view.find(r\"^[^;]*?\\(\", 0)",
			"r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\".rfind(\"hard.input (:import [UnityEngine Input KeyCode Camera Physics Time])\")",
			"r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\".rfind(\"(ns hard.input (:import [UnityEngine Input KeyCode Camera Physics Time])\")",
			"r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\".rfind(\"(ns hard.input (:import [UnityEngine Input KeyCode Camera Physics Time]))\")",
			"dir(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\")",
			"r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\"",
			"view.substr(view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3))",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).substr",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).text",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).lines",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).lines()",
			"dir(view)",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3)",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3).begin()",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", view.find(r\"^[^;]*?\\(\", 0).begin() + 3)",
			"view.find(r\"[\\}\\s][A-Za-z\\_!\\?\\*\\+\\-][\\w!\\?\\*\\+\\-:]*(\\.[\\w!\\?\\*\\+\\-:]+)*\", namespacedecl.begin() + 3)",
			"view.scope_name(view.find(r\"^[^;]*?\\(\", 0).begin() + 1)",
			"view.find(r\"^[^;]*?\\(\", 0)",
			"namespacedecl ",
			"view.scope_name(namespace.begin() + 1)",
			"view.scope_name(namespacedecl.end()-1)",
			"namespacedecl = view.find(r\"^[^;]*?\\(\", 0)",
			"view.find(r\"^[^;]*?\\(\", 0)",
			"view.scope_name(namespacedecl.end()-1)",
			"view.scope_name",
			"view",
			"import urllib.request,os,sys; exec(\"if sys.version_info < (3,) or os.name != 'nt': raise OSError('This code is for Windows ST3 only!')\"); pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/selfsame/dev/carts"
	],
	"file_history":
	[
		"/home/selfsame/dev/carts/jswfc/js/wfc.js",
		"/home/selfsame/dev/carts/jswfc/index.html",
		"/home/selfsame/dev/carts/jswfc/test.html",
		"/home/selfsame/dev/carts/jswfc/js/model.js",
		"/home/selfsame/dev/carts/overlap.js",
		"/home/selfsame/dev/carts/model.js",
		"/home/selfsame/dev/carts/overlap.cs",
		"/home/selfsame/dev/carts/ecs.p8",
		"/home/selfsame/dev/carts/wfc.p8",
		"/C/projects/joe/dev/sculpt/app/index - Copy.html",
		"/C/projects/OTD website/site-black/css/style.css",
		"/C/projects/joe/dev/sculpt/app/serve.BAT",
		"/C/projects/joe/dev/leftpad.js",
		"/C/projects/OTD website/site/server.BAT",
		"/C/projects/joe/dev/safe.txt",
		"/C/projects/joe/dev/unity/vanilla/Assets/vanilla.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/clojure/core.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Components/UpdateHook.cs",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/clojure/core_deftype.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/classy/src/main/clojure/clojure/classy/fish.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/classy/project.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/components.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Editor/CustomEditorInspectors.cs",
		"/C/projects/joe/dev/unity/vanilla/Assets/classy/src/main/clojure/classy/fish.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/classy/src/main/cljs/classy/fish.cljs",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Components/ArcadiaBehaviour.cs",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Components/AwakeHook.cs",
		"/C/projects/joe/dev/unity/vanilla/Assets/core.logic/src/main/clojure/clojure/core/logic/protocols.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/core.logic/src/main/clojure/clojure/core/logic.clj",
		"/C/Users/Joe/AppData/Local/Unity/Editor/Editor.log",
		"/C/projects/joe/dev/unity/vanilla/Assets/core.logic/src/main/clojure/clojure/core/logic/fd.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/core.logic/src/test/clojure/clojure/core/logic/tests.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/core.logic/src/test/clojure/clojure/core/logic/nominal/tests.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/core.logic/src/main/clojure/clojure/core/logic/nominal.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/configuration.edn",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/clojure/gvec.clj",
		"/C/Users/Joe/AppData/Local/Unity/Editor/Editor-prev.log",
		"/C/projects/joe/dev/core.logic/src/main/clojure/clojure/core/logic.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/core.logic/src/main/clojure/clojure/core/logic/datomic.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/core.logic/src/main/clojure/cljr/core/logic/protocols.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/editor_interop.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/compiler.clj",
		"/C/projects/joe/dev/clojure-toolbox.com/projects.yml",
		"/C/projects/joe/dev/seecode/src/deck/data.cljs",
		"/C/projects/joe/dev/seecode/src/deck/core.cljs",
		"/C/projects/joe/dev/seecode/resources/public/data/tween1.md",
		"/C/projects/joe/dev/final/resources/public/demo/wiki-light.html",
		"/C/projects/joe/dev/unity/vanilla/Arcadia/configuration.edn",
		"/C/projects/joe/dev/nostrand/Nostrand.sln",
		"/C/projects/joe/dev/nostrand/Nostrand.csproj",
		"/C/projects/joe/dev/unity/vanilla/clojure-clr/unity-build.sh",
		"/C/projects/joe/dev/unity/vanilla/clojure-clr/unity-install.sh",
		"/C/projects/joe/dev/unity/vanilla/Assets/deftests.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/combined.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Editor/Initialization.cs",
		"/C/projects/joe/dev/unity/vanilla/Assets/test1.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/state.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/file_system.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/asset_watcher.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/config.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/filewatcher.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/repl.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/leiningen.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/packages.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/hydrate/src/timsg/hydrate/reflect.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/squirt.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/hydrate/src/timsg/hydrate.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/core.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/literals.clj",
		"/C/projects/joe/dev/unity/pelatra/pelatra_latest/Assets/StreamingAssets/bike/workout_long.json",
		"/C/projects/joe/dev/unity/pelatra/pelatra_latest/Assets/StreamingAssets/bike/workout1.json",
		"/C/projects/joe/dev/unity/pelatra/pelatra_latest/Assets/StreamingAssets/bike/colored_workout.json",
		"/C/projects/joe/dev/unity/biology/biology/Assets/Clojure/Scripts/biology/squid.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Editor/BuildPostProcess.cs",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Editor/Repl.cs",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Editor/Util.cs",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Editor/ReplCleaner.cs",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/map_utils.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/functions.clj",
		"/C/projects/joe/dev/unity/vanilla/Assets/Arcadia/Source/arcadia/internal/filewatcher_dummy.clj",
		"/C/projects/joe/dev/unity/vanilla/vanilla.sublime-project",
		"/C/Users/jparker/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/admin/Documents/dev/selenica/project.clj"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 106.0,
		"where_history":
		[
			"C:\\projects\\joe\\dev\\sculpt\\src",
			"C:\\projects\\joe\\dev\\unity\\vanilla\\Assets\\Arcadia\\Source\\clojure",
			"C:\\projects\\joe\\dev\\unity\\vanilla\\Assets\\core.logic\\src\\main\\clojure\\clojure\\core",
			"C:\\projects\\joe\\dev\\unity\\vanilla\\Assets\\Arcadia\\Source\\clojure",
			"C:\\projects\\joe\\dev\\unity\\vanilla\\Assets\\Arcadia\\Source\\arcadia",
			"C:\\projects\\joe\\dev\\unity\\vanilla\\Assets\\Arcadia\\Source\\clojure",
			"C:\\projects\\joe\\dev\\unity\\vanilla\\Assets\\Arcadia\\Source\\arcadia"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"image",
			"propagate",
			"onBoundary",
			"active",
			"gold",
			"smoke",
			"joe",
			"black",
			"white",
			"position_title",
			"Selfsame",
			"addCylinder",
			"Selfsame",
			"normalizeAndCenterMeshes",
			"_autoMatrix",
			"ch",
			"num",
			"str",
			"case",
			"letfn",
			"reify",
			"fnIndexes",
			"conde",
			"log",
			"hashCode",
			"getClass",
			"equals",
			"toString",
			"Writer",
			"isInstance",
			"same-type",
			"same-type?",
			"isInstance",
			"isInstanceOfType",
			"isInstance",
			"getClass",
			"clojure.lang.Counted",
			"Substitutions",
			"Integer",
			"Error",
			"toString",
			"equals",
			"hashCode",
			"equals",
			"toString",
			"getKey",
			"IMapEntry",
			"IndexOutOfBoundsException",
			"map-entry?",
			"Throwable",
			"pair",
			"UUID",
			"Writer",
			"*print-length*",
			"spit",
			"sh",
			"aot-namespaces",
			"RT\\.load\\(.*",
			"RT\\.load\\(arcadia\\/config\\).*",
			"edn",
			"Debug",
			"state",
			"aw",
			"fw",
			"RT\\.load\\(arcadia\\/config\\).*",
			"Path",
			"File",
			"Regex",
			"RT\\.load\\(arcadia\\/config\\).*",
			"RT\\.load\\(hard\\/core\\).*",
			"RT\\.load\\(arcadia\\/config\\).*",
			"RT.load(arcadia/config)",
			"\n(",
			"pprint",
			"fdef",
			"s/def",
			"fdef",
			"s/def",
			"pprint",
			"s/def",
			"clojure.spec",
			"Dictionary",
			"Generic",
			"Dictionary",
			"config",
			"record-props",
			"setables",
			"prop->map",
			"server",
			"parse-stack-trace",
			"window",
			"try",
			"pelatra"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "alienarchaeologist.p8",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 58467,
						"regions":
						{
						},
						"selection":
						[
							[
								2279,
								2279
							]
						],
						"settings":
						{
							"rainbowth.lispy": false,
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1110.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "pico8.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\projects\\joe\\dev\\soa\\soa.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 174.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
